@model LoginFrontPage.Models.Corporate

@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/_Layout_Register.cshtml";
}

<h2>Registration</h2>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">


        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.Label("Full Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                Male
                @Html.RadioButtonFor(model => model.Gender, "Male")
                Female
                @Html.RadioButtonFor(model => model.Gender, "Female")
                @Html.HiddenFor(Model => Model.Gender)
                @*@Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control", min = "1970-01-01", max = "2000-01-01" } })
                @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">

            @Html.Label("Degree", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10" style="color:black">
                @Html.DropDownList("Degree", ViewBag.Degree as SelectList, "Select Degree", new { @onChange = "selectedDegree(this)" })
                @Html.Hidden("selecteddegree")
                @*@Html.EditorFor(model => model.GradDegree, new { htmlAttributes = new { @class = "form-control" }*@
                @Html.ValidationMessageFor(model => model.GradDegree, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.Label("Degree Branch", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GradBranch, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GradBranch, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.Label("Degree Percentage", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GradPerc, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GradPerc, "", new { @class = "text-danger" })
            </div>
        </div>






        <div class="form-group">
            @Html.Label("Graduated Year", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GradPassesYear, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GradPassesYear, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Technology Stack", htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="form-inline col-md-10">

                <input type="checkbox" name="tech1" value="java">Java<br />
                <input type="checkbox" name="tech2" value="python">Python<br />
                <input type="checkbox" name="tech3" value="csharp" checked>C#<br>
            </div>
        </div>


        <div class="form-group">
            @Html.Label("Previous Company", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PrevCompany, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PrevCompany, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Experience", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ExpYears, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ExpYears, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control",Type="password" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Confirm Password", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", Type = "password" } })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Register" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

@*@if (ViewBag.conpass == "fail")
{
    <h4>Passwords do not match</h4>
}
else
{

}*@






<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<script>
    function selectedDegree() {
        var selval = Degree.value;
        var seltext = Degree.options[Degree.selectedIndex].innerHTML;
        $('#selecteddegree').val(seltext)
    }
    function selectedJava() {
        var selval = Java.value;
        var seltext = Java.innerHTML;
        $('#selectedjava').val(seltext)
    }
</script>
